# Generated by Django 4.2.10 on 2025-04-05 12:23

import accounts_receivable.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountReceivable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(default=datetime.date.today, verbose_name='transaction date')),
                ('due_date', models.DateField(verbose_name='due date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='amount')),
                ('check_number', models.CharField(max_length=50, verbose_name='check number')),
                ('receipt_number', models.CharField(default=accounts_receivable.models.AccountReceivable.generate_receipt_number, editable=False, max_length=20, unique=True, verbose_name='receipt number')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('pending', 'Pending'), ('overdue', 'Overdue')], default='active', max_length=20, verbose_name='status')),
                ('notes', models.TextField(blank=True, max_length=500, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'account receivable',
                'verbose_name_plural': 'accounts receivable',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='bank name')),
                ('arabic_name', models.CharField(max_length=100, verbose_name='bank name (Arabic)')),
                ('branch', models.CharField(blank=True, max_length=100, verbose_name='branch')),
                ('swift_code', models.CharField(blank=True, max_length=20, verbose_name='SWIFT code')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='contact person')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'bank',
                'verbose_name_plural': 'banks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReceivableTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('partial_payment', 'Partial Payment'), ('full_payment', 'Full Payment'), ('return', 'Return'), ('adjustment', 'Adjustment')], max_length=20, verbose_name='transaction type')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='amount')),
                ('transaction_date', models.DateField(default=datetime.date.today, verbose_name='transaction date')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='reference')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receivable_transactions', to=settings.AUTH_USER_MODEL)),
                ('receivable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts_receivable.accountreceivable', verbose_name='receivable')),
            ],
            options={
                'verbose_name': 'receivable transaction',
                'verbose_name_plural': 'receivable transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='client name')),
                ('arabic_name', models.CharField(blank=True, max_length=200, verbose_name='client name (Arabic)')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='contact person')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')], verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('tax_number', models.CharField(blank=True, max_length=50, verbose_name='tax number')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='credit limit')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('notes', models.TextField(blank=True, max_length=500, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='accountreceivable',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivables', to='accounts_receivable.bank', verbose_name='bank'),
        ),
        migrations.AddField(
            model_name='accountreceivable',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivables', to='accounts_receivable.client', verbose_name='client'),
        ),
        migrations.AddField(
            model_name='accountreceivable',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_receivables', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='accountreceivable',
            constraint=models.CheckConstraint(check=models.Q(('due_date__gt', models.F('transaction_date'))), name='due_date_after_transaction_date'),
        ),
    ]
